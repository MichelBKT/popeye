networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge

volumes:
  db-data:

services:
  db:
    image: postgres:16
    container_name: database
    restart: always
    env_file:
      - .env
    networks:
      - back-tier
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7
    container_name: redis7
    restart: always
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  poll:
    build:
      context: ./poll
      dockerfile: Dockerfile.poll
    container_name: poll2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - poll-tier
      - back-tier
    environment:
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - REDIS_HOST=$REDIS_HOST
    ports:
      - "5000:80"

  result:
    build:
      context: ./result
      dockerfile: Dockerfile.result
    container_name: result2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - result-tier
      - back-tier
    environment:
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - REDIS_HOST=$REDIS_HOST
    ports:
      - "5001:80"

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.worker
    container_name: worker2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - back-tier
    environment:
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - REDIS_HOST=$REDIS_HOST
    ports:
      - "5002:80"