
services:
  db:
    env_file:
      - .env
    image: postgres:16
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${QUEUE_PORT}:5672"
      - "${QUEUE_MANAGEMENT_PORT}:15672"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s

  poll:
    build:
      context: ./poll
      dockerfile: Dockerfile
    env_file:
      - .env
    image: poll
    ports:
      - "${POLL_PORT}:80"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POLL_PORT=${POLL_PORT}
      - QUEUE_HOST=${QUEUE_HOST}
      - QUEUE_PORT=${QUEUE_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:80 || exit 1" ]
      interval: 10s
      retries: 5
      timeout: 5s

  result:
    build:
      context: ./result
      dockerfile: Dockerfile
    env_file:
      - .env
    image: result
    ports:
      - "${RESULT_PORT}:80"
    depends_on:
      db:
        condition: service_healthy
      poll:
        condition: service_healthy
    environment:
      - RESULT_PORT=${RESULT_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${RESULT_PORT}/" ]
      interval: 10s
      retries: 5
      timeout: 5s

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    env_file:
      - .env
    image: worker
    depends_on:
      db:
        condition: service_healthy
      poll:
        condition: service_healthy
      result:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: java -jar worker-jar-with-dependencies.jar
    environment:
      - QUEUE_HOST=${QUEUE_HOST}
      - QUEUE_PORT=${QUEUE_PORT}
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
        interval: 10s
        retries: 5
        timeout: 5s
